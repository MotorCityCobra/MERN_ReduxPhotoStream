{"version":3,"sources":["reducers/photoReducer.js","reducers/errorReducer.js","reducers/commentReducer.js","reducers/index.js","actions/types.js","store.js","actions/errorActions.js","components/home.js","actions/photoActions.js","actions/commentActions.js","components/post.js","App.js","index.js"],"names":["defaultState","array","arrays","initialState","msg","status","id","comment","filename","comments","combineReducers","photos","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","payload","slice","count","filter","r","console","log","concat","find","file","error","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","returnErrors","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickDelete","deletePhoto","deletePhotoComments","getNext","setState","morePhotos","valid","onFileChange","bind","assertThisInitialized","submit","firstPhotos","e","target","files","preventDefault","myFile","refs","uploadHandlerer","_this2","react_default","a","createElement","className","method","encType","ref","onChange","name","htmlFor","onClick","value","lib_default","dataLength","next","hasMore","map","_ref","_id","TransitionGroup","CSSTransition","key","timeout","classNames","react_router_dom","to","src","alt","Button","React","Component","connect","dispatch","axios","get","then","res","data","catch","err","response","delete","fd","FormData","append","post","Post","submitFormHandler","ncomment","aComment","page","match","params","commentUploader","singleView","individualComments","scrollTo","z","width","onSubmit","rows","date","content","allPhotos","App","es","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qSASIA,EAAe,CACjBC,MAAO,KACPC,OAAQ,MCTJC,EAAe,CACnBC,IAAK,GACLC,OAAQ,KACRC,GAAI,MCEAN,EAAe,CACjBO,QAAS,KACTC,SAAU,KACVC,SAAU,MCHCC,cAAgB,CAC7BC,OHMa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBb,EAAcgB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IIbwB,eJctB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,OAAQgB,OAAAE,EAAA,EAAAF,CAAIF,EAAOK,SAASC,MAAM,EAAG,KAEzC,IIduB,cJerB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,OAAQgB,OAAAE,EAAA,EAAAF,CAAIF,EAAOK,QAAQ,IAAIC,MAAM,EAAGN,EAAOK,QAAQ,GAAGE,SAE9D,IIxBsB,aJyBpB,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,OAAQc,EAAOK,UAEnB,II9BwB,eJ+BtB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,OAAQU,EAAMV,OAAOsB,OAAO,SAAAC,GAAC,OAAIA,EAAEjB,WAAaQ,EAAOK,YAEzD,II9B2B,oBJgCzB,OADAK,QAAQC,IAAIX,EAAOK,QAAS,WACrBH,OAAAC,EAAA,EAAAD,CAAA,GACJN,EADH,CAEAV,OAAM,CAAGc,EAAOK,SAAVO,OAAAV,OAAAE,EAAA,EAAAF,CAAsBN,EAAMV,WAEpC,IIlCqB,cJqCjB,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACJN,EADH,CAEAX,MAAOiB,OAAAE,EAAA,EAAAF,CAAIF,EAAOK,QAAQ,IAAIQ,KAAK,SAAAJ,GAAC,OAAIA,EAAEjB,WAAaQ,EAAOK,QAAQ,GAAGS,SAE7E,QACA,OAAOlB,IGzCXmB,MFDa,WAAkC,IAAjCnB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBV,EAAca,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAOC,EAAOC,MACZ,IGNsB,aHOpB,MAAO,CACLb,IAAKY,EAAOK,QAAQjB,IACpBC,OAAQW,EAAOK,QAAQhB,OACvBC,GAAIU,EAAOK,QAAQf,IAEvB,IGXwB,eHYtB,MAAO,CACLF,IAAK,GACLC,OAAQ,KACRC,GAAI,MAER,QACE,OAAOM,IEbXH,SDGe,WAAkC,IAAjCG,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBb,EAAcgB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IEN0B,mBFOxB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,SAAQ,CAAGO,EAAOK,SAAVO,OAAAV,OAAAE,EAAA,EAAAF,CAAsBN,EAAMH,aAExC,IEVwB,iBFexB,IEd+B,wBFe7B,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,SAAUO,EAAOK,UAEnB,QACA,OAAOT,MGzBToB,EAAa,CAACC,KAmBLC,EALDC,YAAYC,EAhBL,GAgBgCC,YACnDC,IAAeC,WAAf,EAAmBP,GACnBQ,OAAOC,8BAAgCD,OAAOC,gFCnBnCC,EAAe,SAACtC,EAAKC,GAChC,MAAO,CACLY,KFDsB,aEEtBI,QAAS,CAAEjB,MAAKC,SAAQC,GAH4BO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,yBCSzC8B,cAKJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAJ,IACjBE,EAAA3B,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAAyB,GAAAO,KAAAH,KAAMH,KAaRO,cAAgB,SAAA3C,GACdqC,EAAKD,MAAMQ,YAAY5C,GACvBqC,EAAKD,MAAMS,oBAAoB7C,IAhBdqC,EAgCnBS,QAAU,WACRT,EAAKU,SAAS,CAAEhC,MAAOsB,EAAKjC,MAAMW,MAAQ,IAC1CsB,EAAKD,MAAMY,WAAWX,EAAKjC,MAAMW,QAhCjCsB,EAAKjC,MAAQ,CACXV,OAAQ,GACRqB,MAAO,EACPkC,OAAO,GAETZ,EAAKa,aAAeb,EAAKa,aAAaC,KAAlBzC,OAAA0C,EAAA,EAAA1C,CAAA2B,IACpBA,EAAKgB,OAAShB,EAAKgB,OAAOF,KAAZzC,OAAA0C,EAAA,EAAA1C,CAAA2B,IARGA,mFAYjBE,KAAKH,MAAMkB,mDAOAC,GACPA,EAAEC,OAAOC,MAAM,GACjBlB,KAAKQ,SAAU,CAACE,OAAO,IAEvBV,KAAKQ,SAAU,CAACE,OAAO,mCAGpBM,GACLA,EAAEG,iBACF,IAAMC,EAAUpB,KAAKqB,KAAKD,OAAQF,MAAM,GACtClB,KAAKH,MAAMyB,gBAAgBF,oCAOtB,IAAAG,EAAAvB,KAGP,GAAKA,KAAKH,MAAM1C,OAIT,KACCA,EAAW6C,KAAKH,MAAhB1C,OACR,OACEqE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,eAAuDH,EAAAC,EAAAC,cAAA,WAAvD,gBACAF,EAAAC,EAAAC,cAAA,QAAMzD,OAAO,oBAAoB2D,OAAO,OAAOC,QAAQ,uBACrDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,OAAO4D,IAAI,SAASC,SAAU/B,KAAKW,aAAcqB,KAAK,OAAOzE,GAAG,OAAOoE,UAAU,sBAC7FH,EAAAC,EAAAC,cAAA,SAAOO,QAAQ,OAAON,UAAU,qBAAhC,gBAEFH,EAAAC,EAAAC,cAAA,SAAOxD,KAAK,SAASgE,QAASlC,KAAKc,OAAQqB,MAAM,SAASH,KAAK,OAAOL,UAAU,+BAElFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACAY,WAAYrC,KAAKH,MAAM1C,OAAOY,OAC9BuE,KAAMtC,KAAKO,QACXgC,SAAS,GAENpF,EAAOqF,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAKjF,EAARgF,EAAQhF,SAAR,OACR+D,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAeC,IAAKH,EAAKI,QAAS,IAAKC,WAAW,QAChDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBkB,IAAKH,GAC1ClB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,UAAYxF,GACpB+D,EAAAC,EAAAC,cAAA,OAAKwB,IAAK,oBAAqBzF,EAAWoF,IAAKH,EAAKS,IAAI,GAAGxB,UAAU,YAErEH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACAzB,UAAU,gCAEVO,QAASX,EAAKnB,cAAcQ,KAAKW,EAAM9D,IAHvC,qBAhCpB,OACE+D,EAAAC,EAAAC,cAAA,gCA9CW2B,IAAMC,WAsGVC,cANS,kBAAM,SAAC1F,GAC7B,MAAO,CACLV,OAAQU,EAAMD,OAAOT,UAKvB,CAAE4D,YC7GuB,kBAAM,SAAAyC,GAC/BC,IACGC,IAAI,cACJC,KAAK,SAAAC,GAAG,OACPJ,EAAS,CACPtF,KJRoB,eISpBI,QAASsF,EAAIC,SAGhBC,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aDoGxDmD,WChGsB,SAAAjC,GAAK,OAAI,SAAAgF,GACjCC,IACGC,IAAI,cACJC,KAAK,SAAAC,GAAG,OACPJ,EAAS,CACPtF,KJlBmB,cImBnBI,QAAS,CAACsF,EAAIC,KAAM,CAAErF,cAGzBsF,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aDuFxD+C,YCvEuB,SAAA5C,GAAQ,OAAI,SAAC+F,GACtCC,IACGQ,OADH,cAAApF,OACwBpB,IACrBkG,KACCH,EAAS,CACPtF,KJlDoB,eImDpBI,QAASb,KAGdqG,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aD8DtDgE,gBC1D2B,SAAAvC,GAAI,OAAI,SAACyE,GACpC,IAAMU,EAAK,IAAIC,SACfD,EAAGE,OAAO,OAAQrF,EAAMA,EAAKiD,MAC7ByB,IACGY,KAAK,oBAAqBH,GAC1BP,KAAK,SAAAC,GAAG,OAEPJ,EAAS,CACPtF,KJ9DuB,oBI+DvBI,QAASsF,EAAIC,KAAK9E,SAGzB+E,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aD8CtDgD,oBE/E+B,SAAA7C,GAAQ,OAAI,SAAC+F,GAC9CC,IACGQ,OADH,8BAAApF,OACwCpB,IACrCkG,KACCH,EAAS,CACPtF,KLlC6B,wBKmC7BI,QAASb,KAGdqG,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,cFgE3CiG,CAMT3D,GGjHA0E,cACJ,SAAAA,EAAYzE,GAAO,IAAAC,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAsE,IACjBxE,EAAA3B,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAAmG,GAAAnE,KAAAH,KAAMH,KAUR0E,kBAAoB,SAACvD,GACnBA,EAAEG,iBACF,IAAMqD,EAAY1E,EAAKuB,KAAKoD,SAAStC,MAC/BuC,EAAO5E,EAAKD,MAAM8E,MAAMC,OAAOnH,SACrCqC,EAAKD,MAAMgF,gBAAgBL,EAAUE,GACrC5E,EAAKuB,KAAKoD,SAAStC,MAAQ,IAd3BrC,EAAKyE,kBAAoBzE,EAAKyE,kBAAkB3D,KAAvBzC,OAAA0C,EAAA,EAAA1C,CAAA2B,IAFRA,mFAMjBE,KAAKH,MAAMiF,WAAW9E,KAAKH,MAAM8E,MAAMC,OAAOnH,UAC9CuC,KAAKH,MAAMkF,mBAAmB/E,KAAKH,MAAM8E,MAAMC,OAAOnH,UACtDgC,OAAOuF,SAAS,EAAG,oCAYnB,IAAMC,EAAIjF,KAAKH,MAAMnC,SACnB8D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,KACRzB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,SAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKwB,IAAG,oBAAArE,OAAsBmB,KAAKH,MAAM3C,MAAMO,UAC/C0F,IAAI,GAAGxB,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAChBK,KAAK,YAAYkD,MAAM,MACvBC,SAAUnF,KAAKuE,mBACf/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOO,QAAQ,WAAf,YACAT,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeyD,KAAK,IAAI7H,GAAG,UAC/CW,KAAK,OAAO4D,IAAI,cAElBN,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEzB,UAAU,qBAEVzD,KAAK,UAHP,YAOIsD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAMfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,YACC3B,KAAKH,MAAMnC,SAAS8E,IAAI,SAAA6B,GAAI,OAC7B7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYkB,IAAKwB,EAAK3B,KACjClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,QAA6C0C,EAAKgB,MACpD7D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,YAAyC0C,EAAKiB,eAO1D9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,cAEF,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZsD,UAnEU5B,IAAMC,WA2FVC,cAlBS,SAAC1F,GACvB,MAAO,CACLX,MAAOW,EAAMD,OAAOV,MACpBQ,SAAUG,EAAMH,SAASA,WAgB3B,CAAE6H,UFlEqB,kBAAM,SAAA/B,GAC7BC,IACGC,IAAI,cACJC,KAAK,SAAAC,GAAG,OACPJ,EAAS,CACPtF,KJpCkB,aIqClBI,QAASsF,EAAIC,SAGhBC,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aEwD7CwH,WFtBW,SAAA/F,GAAI,OAAI,SAACyE,GACjCC,IACCC,IAAI,cACJC,KAAK,SAAAC,GAAG,OACPJ,EAAS,CACPtF,KJ1EqB,cI2ErBI,QAAS,CAACsF,EAAIC,KAAM,CAAE9E,eEgBD8F,gBD7FI,SAACS,EAASZ,GAAV,OAAmB,SAAClB,GAKjDC,IACGY,KAAK,gCAAiC,CAAEiB,UAASZ,SACjDf,KAAK,SAAAC,GAAG,OAEPJ,EAAS,CACPtF,KLPwB,mBKQxBI,QAASsF,EAAIC,SAGpBC,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,aC+EpDyH,mBD3E8B,SAAAtH,GAAQ,OAAI,SAAC+F,GAC7CC,IACGC,IADH,0BAAA7E,OACiCpB,IAC9BkG,KAAK,SAAAC,GAAG,OAEPJ,EAAS,CACPtF,KLrBsB,iBKsBtBI,QAASsF,EAAIC,SAGlBC,MAAM,SAAAC,GAAG,OACRP,EAAS7D,EAAaoE,EAAIC,SAASH,KAAME,EAAIC,SAAS1G,cC8D3CiG,CAEWe,GC1EXkB,0LAfX,OACEhE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUtG,MAAOA,GACfqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACAlE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjG,IACjC4B,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAWvB,eARpCjB,IAAMC,YCLxBwC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.378e271a.chunk.js","sourcesContent":["import {\n  DELETE_PHOTO,\n  ALL_PHOTOS,\n  MORE_PHOTOS,\n  FIRST_PHOTOS,\n  SINGLE_VIEW,\n  SELECTED_UPLOADER\n} from '../actions/types';\n\nlet defaultState = {\n  array: null,\n  arrays: null\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case FIRST_PHOTOS:\n      return {\n        ...state,\n        arrays: [...action.payload].slice(0, 2)\n      }\n    case MORE_PHOTOS:\n      return {\n        ...state,\n        arrays: [...action.payload[0]].slice(0, action.payload[1].count)\n      }\n    case ALL_PHOTOS:\n      return {\n        ...state,\n        arrays: action.payload\n      }\n    case DELETE_PHOTO:\n      return {\n        ...state,\n        arrays: state.arrays.filter(r => r.filename !== action.payload)\n      }\n      case SELECTED_UPLOADER:\n        console.log(action.payload, 'reducer')\n        return {\n        ...state,\n        arrays: [action.payload, ...state.arrays]\n        }\n      case SINGLE_VIEW:\n        // console.log([...action.payload[0]].find(r => r.filename === action.payload[1].file))\n        //console.log(action.payload[1].file)\n          return {\n          ...state,\n          array: [...action.payload[0]].find(r => r.filename === action.payload[1].file)\n        }\n      default:\n      return state;    \n  }\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}","\nimport {\n  COMMENT_UPLOADER,\n  INDIV_COMMENTS,\n  DELETE_PHOTO_COMMENTS\n  } from '../actions/types';\n  \n  let defaultState = {\n    comment: null,\n    filename: null,\n    comments: null\n  }\n  \n  export default (state = defaultState, action) => {\n    switch (action.type) {\n      case COMMENT_UPLOADER:\n        return {\n          ...state,\n          comments: [action.payload, ...state.comments]\n        }\n      case INDIV_COMMENTS:\n        return {\n          ...state,\n          comments: action.payload\n        }\n      case DELETE_PHOTO_COMMENTS:\n        return {\n          ...state,\n          comments: action.payload\n        }\n        default:\n        return state;    \n    }\n  }","import { combineReducers } from 'redux';\nimport photoReducer from './photoReducer';\nimport errorReducer from './errorReducer';\nimport commentReducer from './commentReducer';\n\n\n\nexport default combineReducers({\n  photos: photoReducer,\n  error: errorReducer,\n  comments: commentReducer\n})\n","export const UPLOAD_PHOTO = 'UPLOAD_PHOTO';\nexport const DELETE_PHOTO = 'DELETE_PHOTO';\nexport const ALL_PHOTOS = 'ALL_PHOTOS';\nexport const FIRST_PHOTOS = 'FIRST_PHOTOS';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SELECTED_UPLOADER = 'SELECTED_UPLOADER';\nexport const MORE_PHOTOS = 'MORE_PHOTOS';\nexport const SINGLE_VIEW = 'SINGLE_VIEW';\nexport const COMMENT_UPLOADER = 'COMMENT_UPLOADER';\nexport const INDIV_COMMENTS = 'INDIV_COMMENTS';\nexport const DELETE_PHOTO_COMMENTS = 'DELETE_PHOTO_COMMENTS';\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\n// compose(\n//   applyMiddleware(thunk),\n//   window.REDUX_DEVTOOLS_EXTENSION && window.REDUX_DEVTOOLS_EXTENSION()\n//   )\n  \n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeEnhancers(applyMiddleware(...middleWare))\n// );\n\nconst store = createStore(rootReducer, initialState, compose(\n  applyMiddleware(...middleWare),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;","import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { firstPhotos, morePhotos, deletePhoto, uploadHandlerer } from '../actions/photoActions'\nimport { deletePhotoComments } from '../actions/commentActions'\n\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nclass Home extends React.Component {\n  // static propTypes = {\n  //   firstPhotos: PropTypes.func.isRequired,\n  //   arrays: PropTypes.object.isRequired\n  // }\n  constructor(props) {\n    super(props)\n    this.state = { \n      arrays: [],\n      count: 5,\n      valid: true\n    }\n    this.onFileChange = this.onFileChange.bind(this)\n    this.submit = this.submit.bind(this)\n  }\n  \n  componentDidMount() {\n    this.props.firstPhotos()\n  }\n  onClickDelete = filename => {\n    this.props.deletePhoto(filename);\n    this.props.deletePhotoComments(filename);\n  }\n\n  onFileChange(e) {\n    if (e.target.files[0]) {\n      this.setState( {valid: true} )\n    } else {\n      this.setState( {valid: false} )\n    }\n  }\n  submit(e) {\n    e.preventDefault()\n    const myFile = (this.refs.myFile).files[0]\n      this.props.uploadHandlerer(myFile)\n  }\n  \n  getNext = () => {\n    this.setState({ count: this.state.count + 3});\n    this.props.morePhotos(this.state.count)\n  }\n  render() {\n    //console.log(this.props)\n\n    if (!this.props.arrays) {\n      return(\n        <div>...Loading</div>\n      )\n    } else {\n    const { arrays } = this.props;\n    return (\n      <div>\n      <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 m-auto\">\n          <h1 className=\"text-center display-4 my-4\">MERN, Redux <br/>Photo Stream</h1>\n          <form action=\"/api/items/upload\" method=\"POST\" encType=\"multipart/form-data\">\n            <div className=\"custom-file mb-3\">\n              <input type=\"file\" ref='myFile' onChange={this.onFileChange} name=\"file\" id=\"file\" className=\"custom-file-input\"/>\n              <label htmlFor=\"file\" className=\"custom-file-label\">Choose File</label>\n            </div>\n            <input type=\"submit\" onClick={this.submit} value=\"Submit\" name=\"file\" className=\"btn btn-primary btn-block\"/>\n          </form>\n          <hr/>\n            <InfiniteScroll\n            dataLength={this.props.arrays.length}\n            next={this.getNext}\n            hasMore={true}\n            >\n              {arrays.map(({ _id, filename }) => (\n                  <TransitionGroup>\n                    <CSSTransition key={_id} timeout={233} classNames=\"fade\">\n                      <div className=\"card card-body mb-3\" key={_id}>\n                      <Link to={'/image/' + filename} >\n                        <img src={'/api/items/image/'+ filename}  key={_id} alt=\"\" className=\"imaage\"/>\n                        </Link>\n                        <form>\n                          <Button\n                          className=\"btn btn-danger\n                          btn-block mt-4\"\n                          onClick={this.onClickDelete.bind(this, filename)}\n                          >Delete</Button>\n                        </form>\n                      </div>\n                    </CSSTransition>\n                  </TransitionGroup>\n              ))}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }}\n}\n\nconst mapStateToProps = () => (state) => {\n  return {\n    arrays: state.photos.arrays\n  }\n}\n\nexport default connect(mapStateToProps,\n  { firstPhotos,\n    morePhotos,\n    deletePhoto,\n    uploadHandlerer,\n    deletePhotoComments\n   })(Home);","import axios from 'axios';\nimport { DELETE_PHOTO, ALL_PHOTOS, FIRST_PHOTOS,\n  MORE_PHOTOS, SINGLE_VIEW, SELECTED_UPLOADER } from './types';\nimport { returnErrors } from './errorActions';\n\n\nexport const firstPhotos = () => dispatch => {\n  axios\n    .get('/api/items')\n    .then(res =>\n      dispatch({\n        type: FIRST_PHOTOS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\n\nexport const morePhotos = count => dispatch => {\n  axios\n    .get('/api/items')\n    .then(res =>\n      dispatch({\n        type: MORE_PHOTOS,\n        payload: [res.data, { count }]\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\nexport const allPhotos = () => dispatch => {\n  axios\n    .get('/api/items')\n    .then(res =>\n      dispatch({\n        type: ALL_PHOTOS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\nexport const deletePhoto = filename => (dispatch) => {\n  axios\n    .delete(`/api/items/${filename}`)\n    .then(\n      dispatch({\n        type: DELETE_PHOTO,\n        payload: filename\n      })\n    )\n  .catch(err =>\n    dispatch(returnErrors(err.response.data, err.response.status))\n  );\n}\n\nexport const uploadHandlerer = file => (dispatch) => {\n    const fd = new FormData();\n    fd.append('file', file, file.name)\n    axios\n      .post('/api/items/upload', fd)\n      .then(res =>\n        // console.log(res.data)\n        dispatch({\n          type: SELECTED_UPLOADER,\n          payload: res.data.file\n        })\n      )\n  .catch(err =>\n    dispatch(returnErrors(err.response.data, err.response.status))\n  );\n}\n\nexport const singleView = file => (dispatch) => {\n  axios\n  .get('/api/items')\n  .then(res =>\n    dispatch({\n      type: SINGLE_VIEW,\n      payload: [res.data, { file }]\n    })\n  )\n}\n\n","import axios from 'axios';\nimport { COMMENT_UPLOADER,\n        INDIV_COMMENTS,\n        DELETE_PHOTO_COMMENTS } from './types';\nimport { returnErrors } from './errorActions';\n\nexport const commentUploader = (content, page) => (dispatch) => {\n  // FOR GRIDFS\n  // const jcomment = JSON.stringify({ content });\n  // const fd = new FormData();\n  // fd.append('content', jcomment)\n  axios\n    .post('/api/comments/comment/upload/', { content, page })\n    .then(res =>\n      // console.log(res.data, 'that was me')\n      dispatch({\n        type: COMMENT_UPLOADER,\n        payload: res.data\n      })\n    )\n.catch(err =>\n  dispatch(returnErrors(err.response.data, err.response.status))\n);\n}\n\nexport const individualComments = filename => (dispatch) => {\n  axios\n    .get(`/api/comments/comments/${filename}`)\n    .then(res =>\n      //console.log(res.data)\n      dispatch({\n        type: INDIV_COMMENTS,\n        payload: res.data\n      })\n    )\n  .catch(err =>\n    dispatch(returnErrors(err.response.data, err.response.status))\n  );\n}\n\nexport const deletePhotoComments = filename => (dispatch) => {\n  axios\n    .delete(`/api/comments/comments/all/${filename}`)\n    .then(\n      dispatch({\n        type: DELETE_PHOTO_COMMENTS,\n        payload: filename\n      })\n    )\n  .catch(err =>\n    dispatch(returnErrors(err.response.data, err.response.status))\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { allPhotos, singleView } from '../actions/photoActions';\nimport { commentUploader, individualComments } from '../actions/commentActions';\nimport { Link } from 'react-router-dom'\nimport { Button } from 'reactstrap';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props)\n    this.submitFormHandler = this.submitFormHandler.bind(this)\n\n  }\n  componentDidMount() {\n    this.props.singleView(this.props.match.params.filename);\n    this.props.individualComments(this.props.match.params.filename);\n    window.scrollTo(0, 0);\n  }\n\n  submitFormHandler = (e) => {\n    e.preventDefault();\n    const ncomment = (this.refs.aComment.value)\n    const page = this.props.match.params.filename\n    this.props.commentUploader(ncomment, page)\n    this.refs.aComment.value = '';\n  }\n\n  render() {\n    const z = this.props.comments ? (\n      <div>\n        <Link to={'/'} >\n          <h4 className=\"home-text\">home</h4>\n        </Link>\n      <div className=\"card card-body mb-3\">\n        <img src={`/api/items/image/${this.props.array.filename}`}\n        alt=\"\" className=\"post-imaage\"/>\n        <br/>\n        <form className=\"comment-submitter\"\n        name='myComment' width=\"40%\"\n        onSubmit={this.submitFormHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"comment\">Comment:</label>\n          <textarea className=\"form-control\" rows=\"5\" id=\"comment\"\n          type=\"text\" ref=\"aComment\"></textarea>\n        </div>\n        <Button\n          className=\"btn\n          btn-block mt-4\"\n          type=\"submit\"\n          >Submit</Button>\n          </form>\n          </div>\n            <div className=\"container-home\">\n            {/* <InfiniteScroll\n              dataLength={this.state.posts.length}\n              next={this.getNext}\n              hasMore={true}\n              > */}\n            <h4 className=\"another-comment\">Comments</h4>\n            {this.props.comments.map(post => (\n            <div className=\"post-card\" key={post._id}>\n                <div className=\"card-content\">\n                    <span className=\"card-title  red-text\">Date:{post.date}</span>\n                  <p className=\"comment-text-in\">Comment: {post.content}</p>\n                </div>\n              </div>))}\n            {/* </InfiniteScroll> */}\n          </div>\n        </div>\n    ) : (\n      <div className=\"center\">Loading...</div>\n    )\n    return (\n      <div className=\"container\">\n        {z}\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    array: state.photos.array,\n    comments: state.comments.comments\n  }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     commentUploader: (comment) => {\n//       dispatch({\n//         type: \"COMMENT_UPLOADER\",\n//         payload: comment\n//       })\n//     }\n//   }\n// }\n\nexport default connect(mapStateToProps,\n  { allPhotos, singleView, commentUploader,\n    individualComments })(Post);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Home from './components/home'\nimport Post from './components/post'\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/image/:filename' component={Post} />\n            </Switch>\n          </div>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}